'use client';

import { useEffect } from 'react';
import { useGlobalSocket } from '@/hooks/useGlobalSocket';
import { notifications } from '@/components/ui/notifications';
import { playMessageSound } from '@/lib/sound';

export function AvitoNotificationListener() {
  const { socket, isConnected } = useGlobalSocket();

  useEffect(() => {
    console.log('üì¢ AvitoNotificationListener: Mounted, socket:', !!socket, 'isConnected:', isConnected);
    
    if (!socket || !isConnected) {
      console.log('üì¢ AvitoNotificationListener: Socket not ready, waiting...');
      return;
    }

    console.log('üì¢ AvitoNotificationListener: Registering avito-notification listener');

    // –°–ª—É—à–∞–µ–º avito-notification —Å–æ–±—ã—Ç–∏–µ –≤–µ–∑–¥–µ, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const notificationHandler = (...args: unknown[]) => {
      const data = args[0] as {
        type: string;
        chatId: string;
        messageId: string;
        message?: any;
        timestamp: number;
      };

      console.log('üì¢ AvitoNotificationListener: Got notification event:', data.type);

      if (data.type === 'new_message') {
        // Play sound for notification
        playMessageSound();
        
        // Show notification with custom styling
        notifications.info('–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –ê–≤–∏—Ç–æ!');
      }
    };

    socket.on('avito-notification', notificationHandler);
    console.log('üì¢ AvitoNotificationListener: Listener registered');

    // Cleanup
    return () => {
      console.log('üì¢ AvitoNotificationListener: Cleaning up listener');
      socket.off('avito-notification', notificationHandler);
    };
  }, [socket, isConnected]);

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏—Ç –Ω–∏—á–µ–≥–æ, —Ç–æ–ª—å–∫–æ —Å–ª—É—à–∞–µ—Ç —Å–æ–±—ã—Ç–∏—è
  return null;
}
